//Given a sorted array of integers, implement a function that returns the index of the first occurrence of a given number
fn find_first_occurrence(arr: &[i32], target: i32) -> Option<usize> {
    let mut left = 0;
    let mut right = arr.len() - 1;

    while left <= right {
        let mid = left + (right - left) / 2;

        if arr[mid] == target {
            if mid == 0 || arr[mid - 1]!= target {
                return Some(mid);
            } else {
                right = mid - 1;
            }
        } else if arr[mid] < target {
            left = mid + 1;
        } else {
            right = mid - 1;
        }
    }

    None
}

fn main() {
    let numbers = vec![4, 8, 15, 16, 23, 42];
    let target_number = 16;

    match find_first_occurrence(&numbers, target_number) {
        Some(index) => println!("Found at index: {}", index),
        None => println!("Number not found."),
    }
}
